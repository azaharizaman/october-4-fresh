<?php namespace Omsb\Inventory\Updates;

use Schema;
use October\Rain\Database\Schema\Blueprint;
use October\Rain\Database\Updates\Migration;

/**
 * CreateInventoryValuationsTable Migration
 *
 * @link https://docs.octobercms.com/4.x/extend/database/structure.html
 */
return new class extends Migration
{
    /**
     * up builds the migration
     */
    public function up()
    {
        Schema::create('omsb_inventory_inventory_valuations', function(Blueprint $table) {
            $table->engine = 'InnoDB';
            
            $table->id();
            $table->date('valuation_date'); // As of date for valuation
            $table->string('valuation_method', 20); // FIFO, LIFO, Average
            $table->decimal('total_quantity', 15, 6)->default(0); // Total qty across all items
            $table->decimal('total_value', 15, 2)->default(0); // Total valuation amount
            $table->integer('item_count')->default(0); // Number of different items
            $table->boolean('is_locked')->default(false); // Period closed
            $table->text('notes')->nullable();
            $table->timestamps();
            $table->softDeletes();
            
            // Foreign key - Warehouse (valuation scope)
            $table->foreignId('warehouse_id')
                ->constrained('omsb_inventory_warehouses')
                ->restrictOnDelete();
                
            // Foreign key - Inventory Period
            $table->foreignId('inventory_period_id')
                ->constrained('omsb_inventory_inventory_periods')
                ->restrictOnDelete();
            
            // Foreign key - Generated by staff
            $table->foreignId('generated_by')
                ->constrained('omsb_organization_staff')
                ->restrictOnDelete();
            
            // Foreign key - Created by user (backend_users)
            $table->unsignedInteger('created_by');
            $table->foreign('created_by')->references('id')->on('backend_users')->restrictOnDelete();
            
            // Unique constraint - one valuation per warehouse per period
            $table->unique(['warehouse_id', 'inventory_period_id', 'deleted_at'], 'idx_valuation_unique');
            
            // Indexes
            $table->index('valuation_date', 'idx_inventory_valuation_date');
            $table->index('valuation_method', 'idx_inventory_valuation_method');
            $table->index('is_locked', 'idx_inventory_valuation_locked');
            $table->index('deleted_at', 'idx_inventory_valuation_deleted_at');
        });
    }

    /**
     * down reverses the migration
     */
    public function down()
    {
        Schema::dropIfExists('omsb_inventory_inventory_valuations');
    }
};
